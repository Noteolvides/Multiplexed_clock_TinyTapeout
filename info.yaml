--- 
# Tiny Tapeout project information
project:
  wokwi_id:    0        # If using wokwi, set this to your project's ID

# If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. 
# Source files must be in ./src and you must list each source file separately
  source_files:        
    - tt_um_seven_segment_seconds.v
    - decoder.v
  top_module:  "tt_um_seven_segment_seconds"      # Put the name of your top module here, must start with "tt_um_". Make it unique by including your github username

# How many tiles your design occupies? A single tile is about 167x108 uM.
  tiles: "1x1"    # Valid values: 1x1, 1x2, 2x2, 3x2, 4x2 or 8x2

# Keep a track of the submission yaml
yaml_version: 4

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it. This info will be automatically collected and used to make a datasheet for the chip.
#
# Here is a great example: https://github.com/davidsiaw/tt02-davidsiaw-stackcalc/blob/38c5647f83aad2aec675d566aa3d67b98f0aac81/info.yaml
documentation: 
  author:       "Gustavo Gomez"      # Your name
  title:        "Multiplexed clock"      # Project title
  language:     "Verilog" # other examples include Verilog, Amaranth, VHDL, etc
  description:  "Multiplexed clock with buttons"      # Short description of what your project does

# Longer description of how the project works. You can use standard markdown format.
  how_it_works: |
      Firt vhdl file created almost same code as mattvenn code to learn from it.
      Its a clock counts seconds and then shows the hours and minutes in a 7 segment with 4 digits multiplexed. There is two buttons one for increase the hours and another to increase the minutes.

# Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test:  |
      There is a branch already created to test it out in the Tang nano 9k, if you want to test it out i have used the 7 segment of https://www.tme.eu/es/details/kw4-806cgb/7-segment-led-displays/luckylight/

# A description of what the inputs do (e.g. red button, SPI CLK, SPI MOSI, etc).
  inputs:               
    - pull up button that increases minutes
    - pull up button that increases hours
    - pin used to negate 7 segment ouputs if necesary / for catode or anode configurations
    - pin used to negate 4 pins to multiplex if necesary / for catode or anode configurations
    - not used
    - not used
    - not used
    - not used
# A description of what the outputs do (e.g. status LED, SPI MISO, etc)
  outputs:
    - segment a
    - segment b
    - segment c
    - segment d
    - segment e
    - segment f
    - segment g
    - dot
# A description of what the bidirectional I/O pins do (e.g. I2C SDA, I2C SCL, etc)
  bidirectional:
    - output multiplex first digit
    - output multiplex second digit
    - output multiplex third digit
    - output multiplex forth digit
    - output clock of seconds / testing purposes
    - output clock of minutes / testing purposes
    - output not used
    - output not used

# The following fields are optional
  tag:          "clock"      # comma separated list of tags: test, encryption, experiment, clock, animation, utility, industrial, pwm, fpga, alu, microprocessor, risc, riscv, sensor, signal generator, fft, filter, music, bcd, sound, serial, timer, random number generator, calculator, decoder, counter, puzzle, multiplier, game, oscillator,
  external_hw:  "7 segment 4 digits multiplexed"      # Describe any external hardware needed
  discord:      "noteolvides"      # Your discord handle, used for communication and automatically assigning tapeout role after a submission
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     32728       # Clock frequency in Hz (if required)
  picture:      ""      # relative path to a picture in your repository (must be 512kb or less)
